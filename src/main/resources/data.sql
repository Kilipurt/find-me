DROP TABLE MESSAGE IF EXISTS;
DROP TABLE POST IF EXISTS;
DROP TABLE RELATIONSHIP IF EXISTS;
DROP TABLE USER_POST IF EXISTS;
DROP TABLE USER IF EXISTS;


CREATE SEQUENCE IF NOT EXISTS USERS_SEQ MINVALUE 1 MAXVALUE 99999999 START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS MES_SEQ MINVALUE 1 MAXVALUE 99999999 START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS POST_SEQ MINVALUE 1 MAXVALUE 99999999 START WITH 1 INCREMENT BY 1;
CREATE SEQUENCE IF NOT EXISTS RELATIONSHIP_SEQ MINVALUE 1 MAXVALUE 99999999 START WITH 1 INCREMENT BY 1;

CREATE TABLE IF NOT EXISTS USER (
    ID NUMBER PRIMARY KEY,
    FIRST_NAME VARCHAR2(100),
    LAST_NAME VARCHAR2(100),
    PHONE VARCHAR2(50) UNIQUE NOT NULL,
    PASSWORD VARCHAR2(50) NOT NULL,
    COUNTRY VARCHAR2(50),
    CITY VARCHAR2(50),
    AGE NUMBER(3),
    DATE_REGISTERED DATE,
    DATE_LAST_ACTIVE DATE,
    RELATIONSHIP_STATUS VARCHAR2(50),
    RELIGION VARCHAR2(50),
    SCHOOL VARCHAR2(50),
    UNIVERSITY VARCHAR2(50)
);

CREATE TABLE IF NOT EXISTS MESSAGE (
    ID NUMBER PRIMARY KEY,
    TEXT VARCHAR2(140),
    DATE_SENT DATE,
    DATE_READ DATE,
    USER_FROM NUMBER REFERENCES USER(ID),
    USER_TO NUMBER REFERENCES USER(ID),
    DATE_EDITED DATE,
    DATE_DELETED DATE,
    CONSTRAINT DATE_READ_CH CHECK(DATE_SENT <= DATE_READ),
    CONSTRAINT DATE_EDITED_CH CHECK(DATE_EDITED <= DATE_READ),
    CONSTRAINT DATE_DELETED_CH CHECK(DATE_DELETED <= DATE_READ)
);

CREATE TABLE IF NOT EXISTS POST (
    ID NUMBER PRIMARY KEY,
    MESSAGE VARCHAR2(200),
    DATE_POSTED DATE,
    USER_POSTED NUMBER REFERENCES USER(ID),
    USER_PAGE_POSTED NUMBER REFERENCES USER(ID),
    LOCATION VARCHAR2(100)
);

CREATE TABLE IF NOT EXISTS RELATIONSHIP (
    ID NUMBER PRIMARY KEY,
    USER_FROM NUMBER REFERENCES USER(ID),
    USER_TO NUMBER REFERENCES USER(ID),
    STATUS VARCHAR2(100),
    LAST_STATUS_CHANGE DATE,
    CONSTRAINT STATUS_CH CHECK(STATUS IN('FRIENDS', 'REQUEST_SENT', 'DELETED', 'REQUEST_DECLINED', 'PAST_FRIENDS')),
    CONSTRAINT USERS_CH CHECK(USER_FROM != USER_TO)
);

CREATE TABLE IF NOT EXISTS USER_POST (
    POST_ID NUMBER REFERENCES POST(ID) ON DELETE CASCADE,
    USER_ID NUMBER REFERENCES USER(ID),
    CONSTRAINT USER_POST_PK PRIMARY KEY(POST_ID, USER_ID)
);


